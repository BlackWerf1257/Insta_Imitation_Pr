{"ast":null,"code":"var _jsxFileName = \"F:\\\\Spring\\\\Projects\\\\Insta_Imitation_Pr\\\\webfront\\\\src\\\\components\\\\NewPost.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route, Link } from 'react-router-dom';\nimport './css/NewPost.css';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NewPost() {\n  _s();\n  const navigate = useNavigate();\n  const [titleValue, SetTitleValue] = useState('');\n  const [textValue, SetTextValue] = useState('');\n  const [imgValue, SetImgValue] = useState('');\n  const CancelPostAdd = () => {\n    navigate('/');\n  };\n  const PostAdd = async () => {\n    const formData = new FormData();\n    formData.append('title', titleValue); // user_id 값\n    formData.append('text', textValue); // user_pw 값\n    if (imgValue == '') formData.append('img', null);else formData.append('img', imgValue);\n    if (titleValue = '' || textValue == '') {\n      alert('제목과 본문을 작성해주세요');\n      return;\n    }\n    try {\n      const response = await fetch('https://myreactstudy1.dothome.co.kr/PostAdd.php', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        alert(response.message);\n      }\n      const result = await response.json(); //비동기로 JSON에서 변환\n      alert(result.message);\n      if (result.status == 'succeed') {\n        alert('글이 등록되었습니다');\n        navigate('/');\n      } else {\n        alert('글 등록에 실패했습니다');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const updateTitleValue = event => {\n    SetTitleValue(event.target.value);\n  };\n  const updateTextValue = event => {\n    SetTextValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-class\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-text-class\",\n        children: \"\\uC81C\\uBAA9 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"title-input-class\",\n        onChange: updateTitleValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input-class\",\n      placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825 \\uD574\\uC8FC\\uC138\\uC694\",\n      onChange: updateTextValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lower-parent-class\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: PostAdd,\n        className: \"newPost-button-class\",\n        children: \"\\uD3EC\\uC2A4\\uD2B8 \\uB4F1\\uB85D\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: CancelPostAdd,\n        className: \"newPost-button-class\",\n        children: \"\\uBA54\\uC778\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(NewPost, \"7DClYHhS+N0hymG4cNxYq1fekhE=\", false, function () {\n  return [useNavigate];\n});\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["Routes","Route","Link","React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPost","_s","navigate","titleValue","SetTitleValue","textValue","SetTextValue","imgValue","SetImgValue","CancelPostAdd","PostAdd","formData","FormData","append","alert","response","fetch","method","body","ok","message","result","json","status","error","console","log","updateTitleValue","event","target","value","updateTextValue","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["F:/Spring/Projects/Insta_Imitation_Pr/webfront/src/components/NewPost.js"],"sourcesContent":["import { Routes, Route, Link } from 'react-router-dom';\r\nimport './css/NewPost.css';\r\nimport React, {useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom'; \r\n\r\nfunction NewPost() {\r\n  const navigate = useNavigate();\r\n\r\n  const [titleValue, SetTitleValue] = useState('');\r\n  const [textValue, SetTextValue] = useState('');\r\n  const [imgValue, SetImgValue] = useState('');\r\n\r\n  const CancelPostAdd = () => {\r\n    navigate('/');\r\n  }\r\n  const PostAdd = async () => {\r\n    const formData = new FormData();\r\n    formData.append('title', titleValue); // user_id 값\r\n    formData.append('text', textValue);  // user_pw 값\r\n    if(imgValue == '')\r\n      formData.append('img', null);\r\n    else\r\n      formData.append('img', imgValue);\r\n\r\n    if(titleValue = '' || textValue == '')\r\n    {\r\n      alert('제목과 본문을 작성해주세요');\r\n      return;\r\n    }\r\n\r\n    try\r\n    {\r\n          const response = await fetch('https://myreactstudy1.dothome.co.kr/PostAdd.php', \r\n              { method: 'POST',\r\n                  body: formData,\r\n              })\r\n              if(!response.ok)\r\n              {\r\n                  alert(response.message);\r\n              }\r\n\r\n              const result = await response.json(); //비동기로 JSON에서 변환\r\n              alert(result.message);\r\n                \r\n              if(result.status == 'succeed')\r\n              {\r\n                  alert('글이 등록되었습니다');\r\n                  navigate('/');\r\n              }\r\n              else\r\n              {\r\n                  alert('글 등록에 실패했습니다');\r\n              }\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n  }\r\n\r\n  const updateTitleValue = event => { SetTitleValue(event.target.value); };\r\n  const updateTextValue = event => { SetTextValue(event.target.value); };\r\n\r\n  return (\r\n  <>\r\n    <div className='title-class'>\r\n      <p className='title-text-class'>제목 </p>\r\n      <input className='title-input-class' onChange={updateTitleValue}/>\r\n    </div>\r\n    <input className='text-input-class' placeholder='내용을 입력 해주세요' onChange={updateTextValue}/>\r\n    <div className='lower-parent-class'>\r\n        <button onClick={PostAdd} className='newPost-button-class'>포스트 등록하기</button>\r\n        <button onClick={CancelPostAdd} className='newPost-button-class'>메인으로 돌아가기</button>\r\n    </div>\r\n  </>  \r\n  );\r\n}\r\n\r\nexport default NewPost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}