{"ast":null,"code":"var _jsxFileName = \"F:\\\\Spring\\\\Projects\\\\Insta_Imitation_Pr\\\\webfront\\\\src\\\\components\\\\NewPost.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route, Link } from 'react-router-dom';\nimport './css/NewPost.css';\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TextField, Button, Container, Typography, Box, Input } from '@mui/material';\nimport { PhotoCamera, Visibility } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewPost() {\n  _s();\n  const navigate = useNavigate();\n  const [titleValue, SetTitleValue] = useState('');\n  const [textValue, SetTextValue] = useState('');\n  const [imgValue, SetImgValue] = useState('');\n  const [idValue, SetIdValue] = useState(sessionStorage.getItem('SuserName') || '');\n  const [bLoad, SetLoadBool] = useState(false);\n  const imgRef = useRef();\n  const CancelPostAdd = () => {\n    navigate('/');\n  };\n  const PostAdd = async () => {\n    if (idValue == '') {\n      alert('로그인 여부를 확인해주세요');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('userId', idValue);\n    formData.append('title', titleValue); // user_id 값\n    formData.append('text', textValue); // user_pw 값\n    if (imgValue != '') formData.append('img', imgValue);\n    if (titleValue === '' || textValue === '') {\n      alert('제목과 본문을 작성해주세요');\n      return;\n    } else alert('등록됨');\n    try {\n      const response = await fetch('https://myreactstudy1.dothome.co.kr/PostAdd.php', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        alert(response.message);\n      }\n      const result = await response.json(); //비동기로 JSON에서 변환\n\n      if (result.status == 'succeed') {\n        alert('글이 등록되었습니다');\n        navigate('/');\n      } else {\n        alert('글 등록에 실패했습니다');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      bgcolor: 'background.paper',\n      borderRadius: 2,\n      boxShadow: 3,\n      //상하 마진\n      mt: 6,\n      py: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mr: 2,\n        flexGrow: 1,\n        textAlign: \"center\"\n      },\n      children: \"\\uC0C8 \\uAE00 \\uC791\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        mt: 3,\n        mb: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\uC81C\\uBAA9\",\n        placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        onClick: e => SetTitleValue(e.target.value),\n        fullWidth: true,\n        sx: {\n          ml: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: PostAdd,\n        disabled: bLoad,\n        sx: {\n          bgcolor: '#3597ffff',\n          color: 'black',\n          height: '60px',\n          px: 'center',\n          width: '150px',\n          ml: 15,\n          mr: 3\n        },\n        children: \"\\uAE00 \\uB4F1\\uB85D\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      multiline: true,\n      rows: 15,\n      onChange: e => SetTextValue(e.target.value),\n      sx: {\n        mt: 3,\n        mb: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        border: '2px dashed',\n        borderColor: 'gray',\n        p: 3,\n        textAlign: 'center',\n        cursor: 'pointer',\n        '&:hover': {\n          borderColor: 'primary.main',\n          bgcolor: 'grey.100'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/jpeg, image/jpg, image/gif, image/png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(NewPost, \"YJszeCsDvBu/CMBeLlZf1g7wi5I=\", false, function () {\n  return [useNavigate];\n});\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["Routes","Route","Link","React","useState","useRef","useNavigate","TextField","Button","Container","Typography","Box","Input","PhotoCamera","Visibility","jsxDEV","_jsxDEV","NewPost","_s","navigate","titleValue","SetTitleValue","textValue","SetTextValue","imgValue","SetImgValue","idValue","SetIdValue","sessionStorage","getItem","bLoad","SetLoadBool","imgRef","CancelPostAdd","PostAdd","alert","formData","FormData","append","response","fetch","method","body","ok","message","result","json","status","error","console","log","maxWidth","sx","bgcolor","borderRadius","boxShadow","mt","py","children","variant","mr","flexGrow","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","alignItems","mb","label","placeholder","onClick","e","target","value","fullWidth","ml","disabled","color","height","px","width","multiline","rows","onChange","border","borderColor","p","cursor","type","accept","_c","$RefreshReg$"],"sources":["F:/Spring/Projects/Insta_Imitation_Pr/webfront/src/components/NewPost.js"],"sourcesContent":["import { Routes, Route, Link } from 'react-router-dom';\r\nimport './css/NewPost.css';\r\nimport React, {useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport {TextField, Button, Container, Typography, Box, Input} from '@mui/material';\r\nimport { PhotoCamera, Visibility } from '@mui/icons-material'\r\n\r\nfunction NewPost() {\r\n  const navigate = useNavigate();\r\n\r\n  const [titleValue, SetTitleValue] = useState('');\r\n  const [textValue, SetTextValue] = useState('');\r\n  const [imgValue, SetImgValue] = useState('');\r\n  const [idValue, SetIdValue] = useState(sessionStorage.getItem('SuserName') || '');\r\n  const [bLoad, SetLoadBool] = useState(false);\r\n\r\n  const imgRef = useRef();\r\n\r\n  const CancelPostAdd = () => {\r\n    navigate('/');\r\n  }\r\n  const PostAdd = async () => {\r\n    if(idValue == '')\r\n    {\r\n      alert('로그인 여부를 확인해주세요');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('userId', idValue);\r\n    formData.append('title', titleValue); // user_id 값\r\n    formData.append('text', textValue);  // user_pw 값\r\n    if(imgValue != '')\r\n      formData.append('img', imgValue);\r\n\r\n    if(titleValue === '' || textValue === '')\r\n    {\r\n      alert('제목과 본문을 작성해주세요');\r\n      return;\r\n    }\r\n    else alert('등록됨');\r\n\r\n    try\r\n    {\r\n          const response = await fetch('https://myreactstudy1.dothome.co.kr/PostAdd.php', \r\n              { method: 'POST',\r\n                  body: formData,\r\n              })\r\n              if(!response.ok)\r\n              {\r\n                  alert(response.message);\r\n              }\r\n\r\n              const result = await response.json(); //비동기로 JSON에서 변환\r\n                \r\n              if(result.status == 'succeed')\r\n              {\r\n                  alert('글이 등록되었습니다');\r\n                  navigate('/');\r\n              }\r\n              else\r\n              {\r\n                  alert('글 등록에 실패했습니다');\r\n              }\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Container maxWidth={\"md\"}\r\n        sx={{\r\n             bgcolor: 'background.paper', \r\n             borderRadius: 2, \r\n             boxShadow: 3,\r\n             //상하 마진\r\n             mt: 6,\r\n             py: 6\r\n          }}>\r\n      <Typography \r\n        variant='h4'\r\n        \r\n      sx={{\r\n        mr:2,\r\n        flexGrow: 1,\r\n        textAlign:\"center\",\r\n      }}>새 글 작성</Typography>\r\n      {/* 제목바 */}\r\n      <Box\r\n      sx={{\r\n          display: 'flex', \r\n          flexDirection: 'row',\r\n          alignItems: 'center', \r\n          mt: 3,\r\n          mb: 1\r\n      }}>\r\n        <TextField \r\n          label=\"제목\" \r\n          placeholder=\"제목을 입력해주세요\" \r\n          onClick={(e) => SetTitleValue(e.target.value)}\r\n          fullWidth\r\n        sx={{\r\n              ml:2\r\n        }}></TextField>\r\n        <Button \r\n          onClick={PostAdd} \r\n          disabled={bLoad} \r\n          sx={{\r\n          bgcolor: '#3597ffff',\r\n          color: 'black',\r\n          height:'60px',\r\n          px:'center',\r\n          width: '150px',\r\n          ml: 15,\r\n          mr: 3\r\n        }}>글 등록하기</Button>\r\n      </Box>\r\n      <TextField\r\n        fullWidth\r\n        label=\"내용을 입력해주세요\"\r\n        multiline\r\n        rows={15}\r\n        onChange={(e) => SetTextValue(e.target.value)}\r\n        sx={{mt: 3, mb: 3}}\r\n      />\r\n      \r\n      {/* dashed: -형태의 선 p : 패딩 */}\r\n      <Box\r\n      sx={{\r\n          border: '2px dashed',\r\n          borderColor: 'gray',\r\n          p: 3,\r\n          textAlign: 'center',\r\n          cursor: 'pointer',\r\n          '&:hover': {\r\n            borderColor: 'primary.main',\r\n            bgcolor: 'grey.100',\r\n          }\r\n        }}>\r\n        \r\n        {/*<Image sx={{SetImgValue : enab ? Visibility='false'}}/>*/}\r\n        {/*onClick={() => imgRef.current.click}*/}\r\n        <input type='file' accept=\"image/jpeg, image/jpg, image/gif, image/png\"></input>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NewPost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}