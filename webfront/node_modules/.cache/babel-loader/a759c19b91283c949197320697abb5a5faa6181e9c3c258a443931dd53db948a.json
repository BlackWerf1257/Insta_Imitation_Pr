{"ast":null,"code":"var _jsxFileName = \"F:\\\\Spring\\\\Projects\\\\Insta_Imitation_Pr\\\\webfront\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, TextField, Button, Typography, Container, Paper } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2'\n    },\n    secondary: {\n      main: '#dc004e'\n    }\n  }\n});\nfunction Login() {\n  _s();\n  const [idValue, setIdValue] = useState('');\n  const [pwdValue, setPwdValue] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    if (!idValue || !pwdValue) {\n      alert('아이디와 비밀번호를 모두 입력해주세요.');\n      return;\n    }\n    try {\n      const response = await fetch(`https://myreactstudy1.dothome.co.kr/Login.php?id=${idValue}&pwd=${pwdValue}`, {\n        method: 'POST'\n      });\n      if (!response.ok) {\n        console.error('Network response was not ok:', response.status);\n        alert('로그인 처리 중 오류가 발생했습니다.');\n        return;\n      }\n      const result = await response.json();\n      if (result.status === 'succeed') {\n        navigate('/', {\n          state: {\n            isLogged: true,\n            userId: idValue\n          }\n        });\n      } else {\n        alert('아이디나 비밀번호가 일치하지 않습니다.');\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      alert('로그인 요청 중 문제가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      sx: {\n        mt: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 6,\n        sx: {\n          p: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          sx: {\n            mb: 2\n          },\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          sx: {\n            mt: 1,\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"id\",\n            label: \"\\uC544\\uC774\\uB514\",\n            name: \"id\",\n            autoComplete: \"id\",\n            autoFocus: true,\n            value: idValue,\n            onChange: e => setIdValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            value: pwdValue,\n            onChange: e => setPwdValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            onClick: handleLogin,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"kyZAb6rhZULLOSd7a6V2tlwd/lQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Box","TextField","Button","Typography","Container","Paper","createTheme","ThemeProvider","jsxDEV","_jsxDEV","theme","palette","primary","main","secondary","Login","_s","idValue","setIdValue","pwdValue","setPwdValue","navigate","handleLogin","alert","response","fetch","method","ok","console","error","status","result","json","state","isLogged","userId","children","component","maxWidth","sx","mt","elevation","p","display","flexDirection","alignItems","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","width","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","e","target","type","onClick","_c","$RefreshReg$"],"sources":["F:/Spring/Projects/Insta_Imitation_Pr/webfront/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Box, TextField, Button, Typography, Container, Paper } from '@mui/material';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1976d2',\r\n    },\r\n    secondary: {\r\n      main: '#dc004e',\r\n    },\r\n  },\r\n});\r\n\r\nfunction Login() {\r\n  const [idValue, setIdValue] = useState('');\r\n  const [pwdValue, setPwdValue] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    if (!idValue || !pwdValue) {\r\n      alert('아이디와 비밀번호를 모두 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`https://myreactstudy1.dothome.co.kr/Login.php?id=${idValue}&pwd=${pwdValue}`, { method: 'POST' });\r\n      \r\n      if (!response.ok) {\r\n        console.error('Network response was not ok:', response.status);\r\n        alert('로그인 처리 중 오류가 발생했습니다.');\r\n        return;\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.status === 'succeed') {\r\n        navigate('/', { state: { isLogged: true, userId: idValue } });\r\n      } else {\r\n        alert('아이디나 비밀번호가 일치하지 않습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Fetch error:', error);\r\n      alert('로그인 요청 중 문제가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 8 }}>\r\n        <Paper elevation={6} sx={{ p: 4, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n          <Typography component=\"h1\" variant=\"h5\" sx={{ mb: 2 }}>\r\n            로그인\r\n          </Typography>\r\n          <Box component=\"form\" noValidate sx={{ mt: 1, width: '100%' }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"id\"\r\n              label=\"아이디\"\r\n              name=\"id\"\r\n              autoComplete=\"id\"\r\n              autoFocus\r\n              value={idValue}\r\n              onChange={(e) => setIdValue(e.target.value)}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"비밀번호\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={pwdValue}\r\n              onChange={(e) => setPwdValue(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"button\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              onClick={handleLogin}\r\n            >\r\n              로그인\r\n            </Button>\r\n          </Box>\r\n        </Paper>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,EAAEC,KAAK,QAAQ,eAAe;AACpF,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,KAAK,GAAGJ,WAAW,CAAC;EACxBK,OAAO,EAAE;IACPC,OAAO,EAAE;MACPC,IAAI,EAAE;IACR,CAAC;IACDC,SAAS,EAAE;MACTD,IAAI,EAAE;IACR;EACF;AACF,CAAC,CAAC;AAEF,SAASE,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMuB,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAE9B,MAAMuB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACL,OAAO,IAAI,CAACE,QAAQ,EAAE;MACzBI,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAoDR,OAAO,QAAQE,QAAQ,EAAE,EAAE;QAAEO,MAAM,EAAE;MAAO,CAAC,CAAC;MAE/H,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChBC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEL,QAAQ,CAACM,MAAM,CAAC;QAC9DP,KAAK,CAAC,sBAAsB,CAAC;QAC7B;MACF;MAEA,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAEpC,IAAID,MAAM,CAACD,MAAM,KAAK,SAAS,EAAE;QAC/BT,QAAQ,CAAC,GAAG,EAAE;UAAEY,KAAK,EAAE;YAAEC,QAAQ,EAAE,IAAI;YAAEC,MAAM,EAAElB;UAAQ;QAAE,CAAC,CAAC;MAC/D,CAAC,MAAM;QACLM,KAAK,CAAC,uBAAuB,CAAC;MAChC;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCN,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEd,OAAA,CAACF,aAAa;IAACG,KAAK,EAAEA,KAAM;IAAA0B,QAAA,eAC1B3B,OAAA,CAACL,SAAS;MAACiC,SAAS,EAAC,MAAM;MAACC,QAAQ,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAJ,QAAA,eACtD3B,OAAA,CAACJ,KAAK;QAACoC,SAAS,EAAE,CAAE;QAACF,EAAE,EAAE;UAAEG,CAAC,EAAE,CAAC;UAAEC,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAT,QAAA,gBAChG3B,OAAA,CAACN,UAAU;UAACkC,SAAS,EAAC,IAAI;UAACS,OAAO,EAAC,IAAI;UAACP,EAAE,EAAE;YAAEQ,EAAE,EAAE;UAAE,CAAE;UAAAX,QAAA,EAAC;QAEvD;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACb1C,OAAA,CAACT,GAAG;UAACqC,SAAS,EAAC,MAAM;UAACe,UAAU;UAACb,EAAE,EAAE;YAAEC,EAAE,EAAE,CAAC;YAAEa,KAAK,EAAE;UAAO,CAAE;UAAAjB,QAAA,gBAC5D3B,OAAA,CAACR,SAAS;YACRqD,MAAM,EAAC,QAAQ;YACfC,QAAQ;YACRC,SAAS;YACTC,EAAE,EAAC,IAAI;YACPC,KAAK,EAAC,oBAAK;YACXC,IAAI,EAAC,IAAI;YACTC,YAAY,EAAC,IAAI;YACjBC,SAAS;YACTC,KAAK,EAAE7C,OAAQ;YACf8C,QAAQ,EAAGC,CAAC,IAAK9C,UAAU,CAAC8C,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC,eACF1C,OAAA,CAACR,SAAS;YACRqD,MAAM,EAAC,QAAQ;YACfC,QAAQ;YACRC,SAAS;YACTG,IAAI,EAAC,UAAU;YACfD,KAAK,EAAC,0BAAM;YACZQ,IAAI,EAAC,UAAU;YACfT,EAAE,EAAC,UAAU;YACbG,YAAY,EAAC,kBAAkB;YAC/BE,KAAK,EAAE3C,QAAS;YAChB4C,QAAQ,EAAGC,CAAC,IAAK5C,WAAW,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC,eACF1C,OAAA,CAACP,MAAM;YACLgE,IAAI,EAAC,QAAQ;YACbV,SAAS;YACTV,OAAO,EAAC,WAAW;YACnBP,EAAE,EAAE;cAAEC,EAAE,EAAE,CAAC;cAAEO,EAAE,EAAE;YAAE,CAAE;YACrBoB,OAAO,EAAE7C,WAAY;YAAAc,QAAA,EACtB;UAED;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB;AAACnC,EAAA,CA/EQD,KAAK;EAAA,QAGKhB,WAAW;AAAA;AAAAqE,EAAA,GAHrBrD,KAAK;AAiFd,eAAeA,KAAK;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}