{"ast":null,"code":"var _jsxFileName = \"F:\\\\Spring\\\\Projects\\\\Insta_Imitation_Pr\\\\webfront\\\\src\\\\components\\\\NewPost.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route, Link } from 'react-router-dom';\nimport './css/NewPost.css';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TextField, Button, Container, Typography, Box, Input } from '@mui/material';\nimport { PhotoCamera, Visibility } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewPost() {\n  _s();\n  const navigate = useNavigate();\n  const [titleValue, SetTitleValue] = useState('');\n  const [textValue, SetTextValue] = useState('');\n  const [imgValue, SetImgValue] = useState('');\n  const [idValue, SetIdValue] = useState(sessionStorage.getItem('SuserName') || '');\n  const [bLoad, SetLoadBool] = useState(false);\n  const CancelPostAdd = () => {\n    navigate('/');\n  };\n  const PostAdd = async () => {\n    if (idValue == '') {\n      alert('로그인 여부를 확인해주세요');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('userId', idValue);\n    formData.append('title', titleValue); // user_id 값\n    formData.append('text', textValue); // user_pw 값\n    if (imgValue != '') formData.append('img', imgValue);\n    if (titleValue === '' || textValue === '') {\n      alert('제목과 본문을 작성해주세요');\n      return;\n    }\n    try {\n      const response = await fetch('https://myreactstudy1.dothome.co.kr/PostAdd.php', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        alert(response.message);\n      }\n      const result = await response.json(); //비동기로 JSON에서 변환\n\n      if (result.status == 'succeed') {\n        alert('글이 등록되었습니다');\n        navigate('/');\n      } else {\n        alert('글 등록에 실패했습니다');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const updateTitleValue = event => {\n    SetTitleValue(event.target.value);\n  };\n  const updateTextValue = event => {\n    SetTextValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      bgcolor: 'background.paper',\n      borderRadius: 2,\n      boxShadow: 3,\n      marginTop: \"30px\",\n      //상하 마진\n      py: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      onChange: updateTitleValue,\n      sx: {\n        mr: 2,\n        flexGrow: 1,\n        textAlign: \"center\"\n      },\n      children: \"\\uC0C8 \\uAE00 \\uC791\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      fullWidth: true,\n      sx: {\n        display: 'flex',\n        flexDirection: 'row',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\uC81C\\uBAA9\",\n        placeholder: \"\\uAE00 \\uB4F1\\uB85D\\uD558\\uAE30\",\n        sx: {\n          position: 'absolute',\n          left: '40%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: PostAdd,\n        disabled: bLoad,\n        sx: {\n          bgcolor: '#3597ffff',\n          color: 'black',\n          height: '60px',\n          px: 'center'\n        },\n        children: \"\\uAE00 \\uB4F1\\uB85D\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      multiline: true,\n      rows: 15,\n      onChange: updateTextValue,\n      sx: {\n        mt: 3,\n        mb: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        accept: \"image/jpeg, image/jpg, image/gif, image/png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(NewPost, \"8U1tnRDNbljvQsRUe5Zln1Rvlu0=\", false, function () {\n  return [useNavigate];\n});\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["Routes","Route","Link","React","useState","useNavigate","TextField","Button","Container","Typography","Box","Input","PhotoCamera","Visibility","jsxDEV","_jsxDEV","NewPost","_s","navigate","titleValue","SetTitleValue","textValue","SetTextValue","imgValue","SetImgValue","idValue","SetIdValue","sessionStorage","getItem","bLoad","SetLoadBool","CancelPostAdd","PostAdd","alert","formData","FormData","append","response","fetch","method","body","ok","message","result","json","status","error","console","log","updateTitleValue","event","target","value","updateTextValue","maxWidth","sx","bgcolor","borderRadius","boxShadow","marginTop","py","children","variant","onChange","mr","flexGrow","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","display","flexDirection","mb","label","placeholder","position","left","onClick","disabled","color","height","px","multiline","rows","mt","type","accept","_c","$RefreshReg$"],"sources":["F:/Spring/Projects/Insta_Imitation_Pr/webfront/src/components/NewPost.js"],"sourcesContent":["import { Routes, Route, Link } from 'react-router-dom';\r\nimport './css/NewPost.css';\r\nimport React, {useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport {TextField, Button, Container, Typography, Box, Input} from '@mui/material';\r\nimport { PhotoCamera, Visibility } from '@mui/icons-material'\r\n\r\nfunction NewPost() {\r\n  const navigate = useNavigate();\r\n\r\n  const [titleValue, SetTitleValue] = useState('');\r\n  const [textValue, SetTextValue] = useState('');\r\n  const [imgValue, SetImgValue] = useState('');\r\n  const [idValue, SetIdValue] = useState(sessionStorage.getItem('SuserName') || '');\r\n  const [bLoad, SetLoadBool] = useState(false);\r\n\r\n  const CancelPostAdd = () => {\r\n    navigate('/');\r\n  }\r\n  const PostAdd = async () => {\r\n    if(idValue == '')\r\n    {\r\n      alert('로그인 여부를 확인해주세요');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('userId', idValue);\r\n    formData.append('title', titleValue); // user_id 값\r\n    formData.append('text', textValue);  // user_pw 값\r\n    if(imgValue != '')\r\n      formData.append('img', imgValue);\r\n\r\n    if(titleValue === '' || textValue === '')\r\n    {\r\n      alert('제목과 본문을 작성해주세요');\r\n      return;\r\n    }\r\n\r\n    try\r\n    {\r\n          const response = await fetch('https://myreactstudy1.dothome.co.kr/PostAdd.php', \r\n              { method: 'POST',\r\n                  body: formData,\r\n              })\r\n              if(!response.ok)\r\n              {\r\n                  alert(response.message);\r\n              }\r\n\r\n              const result = await response.json(); //비동기로 JSON에서 변환\r\n                \r\n              if(result.status == 'succeed')\r\n              {\r\n                  alert('글이 등록되었습니다');\r\n                  navigate('/');\r\n              }\r\n              else\r\n              {\r\n                  alert('글 등록에 실패했습니다');\r\n              }\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n  }\r\n\r\n  const updateTitleValue = event => { SetTitleValue(event.target.value); };\r\n  const updateTextValue = event => { SetTextValue(event.target.value); };\r\n\r\n  return (\r\n    <Container maxWidth={\"md\"}\r\n        sx={{\r\n             bgcolor: 'background.paper', \r\n             borderRadius: 2, \r\n             boxShadow: 3,\r\n             marginTop:\"30px\",\r\n             //상하 마진\r\n             py: 6\r\n          }}>\r\n      <Typography \r\n        variant='h4'\r\n        onChange={updateTitleValue}\r\n        \r\n      sx={{\r\n        mr:2,\r\n        flexGrow: 1,\r\n        textAlign:\"center\",\r\n      }}>새 글 작성</Typography>\r\n      {/* 제목바 */}\r\n      <Box  \r\n      fullWidth\r\n      sx={{\r\n          display: 'flex', \r\n          flexDirection: 'row',\r\n          mb: 3,\r\n      }}>\r\n        <TextField label=\"제목\" placeholder=\"글 등록하기\"\r\n        sx={{\r\n            position: 'absolute',\r\n            left: '40%'\r\n\r\n        }}></TextField>\r\n        <Button onClick={PostAdd} disabled={bLoad} sx={{\r\n          bgcolor: '#3597ffff',\r\n          color: 'black',\r\n          height:'60px',\r\n          px:'center'\r\n        }}>글 등록하기</Button>\r\n      </Box>\r\n      <TextField\r\n        fullWidth\r\n        label=\"내용을 입력해주세요\"\r\n        multiline\r\n        rows={15}\r\n        onChange={updateTextValue}\r\n        sx={{mt: 3, mb: 3}}\r\n      />\r\n      <Box>\r\n        {/*<Image sx={{SetImgValue : enab ? Visibility='false'}}/>*/}\r\n        <Input type='file' accept=\"image/jpeg, image/jpg, image/gif, image/png\"></Input>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NewPost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}