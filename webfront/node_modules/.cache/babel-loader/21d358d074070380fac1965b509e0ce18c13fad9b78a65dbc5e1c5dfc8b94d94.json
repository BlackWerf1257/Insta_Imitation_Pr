{"ast":null,"code":"var _jsxFileName = \"F:\\\\Spring\\\\Projects\\\\Insta_Imitation_Pr\\\\webfront\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport './css/Login.css';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [idValue, SetIdValue] = React.useState('');\n  const [pwdValue, SetPwdValue] = React.useState('');\n  const [isLoginSucceed, SetLoginBool] = useState(false);\n  const [data, SetData] = useState('');\n  const updateIdValue = event => {\n    SetIdValue(event.target.value);\n  };\n  const updatePwdValue = event => {\n    SetPwdValue(event.target.value);\n  };\n  const navigate = useNavigate();\n  const logEvent = () => {\n    if (idValue !== \"\" && pwdValue !== \"\") {\n      fetch(`https://myreactstudy1.dothome.co.kr/Login.php?id=${idValue}&pwd=${pwdValue}`, {\n        method: 'POST'\n      }).then(response => {\n        if (!response.ok) console.log(response.status);else return response.json();\n      }).then(result => {\n        if (result['status'] == 'succeed') navigate('/', {\n          state: {\n            isLogged: true,\n            userId: idValue\n          }\n        });else alert('ID나 비밀번호가 일치하지않습니다');\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page-parent-class\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keydata-parent-class\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 30\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-class\",\n        onChange: updateIdValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keydata-parent-class\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 30\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-class\",\n        type: \"password\",\n        \"white-space\": \"nowrap\",\n        onChange: updatePwdValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login-button-class-2\",\n      onClick: logEvent,\n      children: \" \\uB85C\\uADF8\\uC778 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"1puu7Au0r98jKD6C7ebnh1ThDiE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","idValue","SetIdValue","pwdValue","SetPwdValue","isLoginSucceed","SetLoginBool","data","SetData","updateIdValue","event","target","value","updatePwdValue","navigate","logEvent","fetch","method","then","response","ok","console","log","status","json","result","state","isLogged","userId","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","onClick","_c","$RefreshReg$"],"sources":["F:/Spring/Projects/Insta_Imitation_Pr/webfront/src/components/Login.js"],"sourcesContent":["import './css/Login.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; \r\n\r\n\r\nfunction Login(){\r\n        const [idValue, SetIdValue] = React.useState('');\r\n        const [pwdValue, SetPwdValue] = React.useState('');\r\n        const [isLoginSucceed, SetLoginBool] = useState(false);\r\n        const [data, SetData] = useState('');\r\n    \r\n        const updateIdValue = event => { SetIdValue(event.target.value); };\r\n        const updatePwdValue = event => { SetPwdValue(event.target.value); };\r\n\r\n\r\n         const navigate = useNavigate();\r\n\r\n         const logEvent = () => {\r\n            if(idValue !== \"\" && pwdValue !== \"\")\r\n            {\r\n                fetch(`https://myreactstudy1.dothome.co.kr/Login.php?id=${idValue}&pwd=${pwdValue}`, { method: 'POST',})\r\n                .then((response) => {\r\n                if(!response.ok)\r\n                console.log(response.status);\r\n                else\r\n                    return response.json();\r\n                })\r\n                .then((result) => {\r\n                    if(result['status'] == 'succeed')\r\n                        navigate('/', { state: { isLogged: true, userId: idValue } });\r\n                    else alert('ID나 비밀번호가 일치하지않습니다')\r\n                })\r\n    }\r\n    }\r\n\r\n    return(\r\n    <div className='login-page-parent-class'>\r\n        {/*ID*/}    \r\n        <div className = 'keydata-parent-class'>\r\n            <p className=''> <b>ID:</b> </p>\r\n            <input className=\"input-class\" onChange={updateIdValue}></input>\r\n        </div>\r\n        {/*PW*/}\r\n        <div className = 'keydata-parent-class'>\r\n            <p className=''> <b>비밀번호:</b> </p>\r\n            <input className=\"input-class\" type='password' white-space='nowrap' onChange={updatePwdValue}></input>\r\n        </div>\r\n\r\n        <button className='login-button-class-2' onClick={logEvent}> 로그인 </button>\r\n        {/*LoginEvent(idValue, pwdValue)*/}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}