{"ast":null,"code":"var _jsxFileName = \"F:\\\\Spring\\\\Projects\\\\Insta_Imitation_Pr\\\\webfront\\\\src\\\\components\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Button, Container, Grid, Typography } from '@mui/material';\nimport { Link } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [data, setData] = useState([]);\n  const navigate = useNavigate();\n  const INITIAL_SHOW_ITEM_COUNT = 20;\n  let prevShowItemCnt = 20;\n  const ITEM_ADD_TO_SHOW = 20;\n  const [itemShowCnt, UpdateItemShowCnt] = useState(INITIAL_SHOW_ITEM_COUNT);\n  const handleMoreItemBtn = () => {\n    UpdateItemShowCnt(prevShowItemCnt => Math.min(prevShowItemCnt + ITEM_ADD_TO_SHOW, data.length));\n  };\n  useEffect(() => {\n    fetch('https://myreactstudy1.dothome.co.kr/GetPrePost.php') // 실제 주소로 변경\n    .then(res => res.json()).then(json => setData(json)).catch(err => console.error(\"데이터 불러오기 실패\", err));\n  }, []);\n\n  //xs: 모바일, sm: 태블릿, md,lg,xl: 데스크톱\n  //각 줄은 12 / size의 값으로 표시됨\n  //Max 20개\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      rowSpacing: 1,\n      columnSpacing: {\n        xs: 1,\n        sm: 2,\n        md: 3\n      },\n      sx: {\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        // 아이템 수직 중앙 정렬\n        padding: \"20px\",\n        display: \"flex\",\n        // 디폴트값\n        flexWrap: \"wrap\" // 줄바꿈 허용\n      },\n      children: data.slice(0, itemShowCnt).map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sm: 4,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            border: '1px solid #ddd',\n            // 각 아이템의 시각적 구분\n            borderRadius: '4px',\n            padding: '20px',\n            textAlign: 'center',\n            height: '100px',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100px',\n            wordBreak: 'break-word',\n            //텍스트가 벗어날때 자동으로 줄 바꿈\n            overflow: 'hidden'\n          },\n          onClick: () => navigate(`/post/${item.id}`),\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), data.length > INITIAL_SHOW_ITEM_COUNT ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleMoreItemBtn,\n      children: \" \\uB354 \\uBCF4\\uAE30 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 53\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"4CiAbi8K9H+6LtDRL183uasBjP8=\", false, function () {\n  return [useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Box","Button","Container","Grid","Typography","Link","RouterLink","jsxDEV","_jsxDEV","Fragment","_Fragment","MainPage","_s","data","setData","navigate","INITIAL_SHOW_ITEM_COUNT","prevShowItemCnt","ITEM_ADD_TO_SHOW","itemShowCnt","UpdateItemShowCnt","handleMoreItemBtn","Math","min","length","fetch","then","res","json","catch","err","console","error","maxWidth","children","container","rowSpacing","columnSpacing","xs","sm","md","sx","justifyContent","alignItems","padding","display","flexWrap","slice","map","item","border","borderRadius","textAlign","height","flexDirection","width","wordBreak","overflow","onClick","id","variant","title","fileName","_jsxFileName","lineNumber","columnNumber","content","_c","$RefreshReg$"],"sources":["F:/Spring/Projects/Insta_Imitation_Pr/webfront/src/components/MainPage.js"],"sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport { Box, Button, Container, Grid, Typography,  } from '@mui/material'\r\nimport { Link } from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nfunction MainPage() {\r\n    const [data, setData] = useState([]);\r\n    const navigate = useNavigate();\r\n    \r\n\r\n    const INITIAL_SHOW_ITEM_COUNT = 20;\r\n    let prevShowItemCnt = 20;\r\n    const ITEM_ADD_TO_SHOW = 20;\r\n    const [itemShowCnt, UpdateItemShowCnt] = useState(INITIAL_SHOW_ITEM_COUNT); \r\n    const handleMoreItemBtn = () => { UpdateItemShowCnt(prevShowItemCnt => Math.min(prevShowItemCnt + ITEM_ADD_TO_SHOW, data.length));\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch('https://myreactstudy1.dothome.co.kr/GetPrePost.php')  // 실제 주소로 변경\r\n            .then(res => res.json())\r\n            .then(json => setData(json))\r\n            .catch(err => console.error(\"데이터 불러오기 실패\", err));\r\n    }, []);\r\n\r\n\r\n//xs: 모바일, sm: 태블릿, md,lg,xl: 데스크톱\r\n//각 줄은 12 / size의 값으로 표시됨\r\n//Max 20개\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n    <Grid container rowSpacing={1}\r\n        columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n        sx={{\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\", // 아이템 수직 중앙 정렬\r\n                padding: \"20px\",\r\n                display: \"flex\",     // 디폴트값\r\n                flexWrap: \"wrap\",    // 줄바꿈 허용\r\n        }}>\r\n\r\n            {data.slice(0, itemShowCnt).map((item) => (\r\n                <Grid\r\n                    item\r\n                    key={item.id}\r\n                    xs={6}\r\n                    sm={4}\r\n                    md={3} \r\n                >\r\n                <Box sx={{\r\n                        border: '1px solid #ddd', // 각 아이템의 시각적 구분\r\n                        borderRadius: '4px',\r\n                        padding: '20px',\r\n                        textAlign: 'center',\r\n                        height: '100px',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center', \r\n                        width: '100px',\r\n                        wordBreak: 'break-word', //텍스트가 벗어날때 자동으로 줄 바꿈\r\n                        overflow: 'hidden',\r\n                    }} onClick={() =>  navigate(`/post/${item.id}`)}>\r\n                        <Typography variant=\"h6\">{item.title}</Typography>\r\n                        <Typography variant=\"body2\">{item.content}</Typography>\r\n                </Box>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n        { data.length > INITIAL_SHOW_ITEM_COUNT  ? (<Button onClick={handleMoreItemBtn}> 더 보기 </Button>) : (<></>)}\r\n    </Container>\r\n  );\r\n}\r\nexport default MainPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}