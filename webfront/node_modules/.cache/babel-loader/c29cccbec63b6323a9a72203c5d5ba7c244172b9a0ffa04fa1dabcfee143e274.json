{"ast":null,"code":"var _jsxFileName = \"F:\\\\Spring\\\\Projects\\\\Insta_Imitation_Pr\\\\webfront\\\\src\\\\components\\\\ViewPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Typography, CircularProgress, Box, Card, CardContent, CardMedia } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostDetail() {\n  _s();\n  const {\n    id\n  } = useParams(); // URL에서 id 추출\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(`https://myreactstudy1.dothome.co.kr/GetPostData.php?id=${id}`).then(result => result.json()).then(data => {\n      if (data && data.status !== 'failed') {\n        // 이미지 경로를 서버 주소와 합쳐서 완전한 URL로 만듭니다.\n        const postWithImageUrl = {\n          ...data,\n          imageUrl: data.image_path ? `https://myreactstudy1.dothome.co.kr/Image/post/${data.image_path}` : null\n        };\n        setPost(postWithImageUrl);\n      }\n      setLoading(false);\n    }).catch(error => {\n      console.error('에러 발생:', error);\n      setLoading(false);\n    });\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n  if (!post || post.status === 'failed') {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        color: \"error\",\n        children: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4,\n      px: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"text.secondary\",\n        children: [\"\\uC791\\uC131\\uC790: \", post.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"text.secondary\",\n        children: [\"\\uC791\\uC131\\uC77C: \", post.created_at]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        borderRadius: 2,\n        boxShadow: 3\n      },\n      children: [post.imageUrl && /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        image: post.imageUrl,\n        alt: \"\\uCCA8\\uBD80 \\uC774\\uBBF8\\uC9C0\",\n        sx: {\n          maxHeight: 500,\n          objectFit: 'contain',\n          padding: 2,\n          backgroundColor: '#f5f5f5'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(PostDetail, \"taoQDP9sD2hseJdPcOb/ybygNeI=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Container","Typography","CircularProgress","Box","Card","CardContent","CardMedia","jsxDEV","_jsxDEV","PostDetail","_s","id","post","setPost","loading","setLoading","fetch","then","result","json","data","status","postWithImageUrl","imageUrl","image_path","catch","error","console","sx","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","mt","variant","align","color","px","mb","textAlign","component","gutterBottom","title","userId","created_at","borderRadius","boxShadow","image","alt","maxHeight","objectFit","padding","backgroundColor","whiteSpace","content","_c","$RefreshReg$"],"sources":["F:/Spring/Projects/Insta_Imitation_Pr/webfront/src/components/ViewPost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Container, Typography, CircularProgress, Box, Card, CardContent, CardMedia } from '@mui/material';\r\n\r\nfunction PostDetail() {\r\n  const { id } = useParams(); // URL에서 id 추출\r\n  const [post, setPost] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://myreactstudy1.dothome.co.kr/GetPostData.php?id=${id}`)\r\n      .then(result => result.json())\r\n      .then(data => {\r\n        if (data && data.status !== 'failed') {\r\n          // 이미지 경로를 서버 주소와 합쳐서 완전한 URL로 만듭니다.\r\n          const postWithImageUrl = {\r\n            ...data,\r\n            imageUrl: data.image_path ? `https://myreactstudy1.dothome.co.kr/Image/post/${data.image_path}` : null,\r\n          };\r\n          setPost(postWithImageUrl);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('에러 발생:', error);\r\n        setLoading(false);\r\n      });\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (!post || post.status === 'failed') {\r\n    return (\r\n      <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"error\">게시글을 불러올 수 없습니다.</Typography>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 4, px: 2 }}>\r\n      <Box sx={{ mb: 4, textAlign: 'center' }}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          {post.title}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n          작성자: {post.userId}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n          작성일: {post.created_at}\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Card sx={{ borderRadius: 2, boxShadow: 3 }}>\r\n        {post.imageUrl && (\r\n          <CardMedia\r\n            component=\"img\"\r\n            image={post.imageUrl}\r\n            alt=\"첨부 이미지\"\r\n            sx={{ \r\n              maxHeight: 500, \r\n              objectFit: 'contain',\r\n              padding: 2,\r\n              backgroundColor: '#f5f5f5'\r\n            }}\r\n          />\r\n        )}\r\n        <CardContent>\r\n          <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n            {post.content}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PostDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}